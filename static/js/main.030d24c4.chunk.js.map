{"version":3,"sources":["context/store.js","Earth.js","context/ActiveElementContext.js","Sun.js","Stars.js","Scene.js","context/GlobalContextProviders.js","Info.js","TrackScreenSize.js","App.js","reportWebVitals.js","index.js"],"names":["useStore","create","set","get","activeElement","undefined","setActiveElement","newActiveElement","state","screenWidth","setScreenWidth","int","getIsMobile","degrees_to_radians","degrees","Math","PI","Earth","isPaused","origX","moonOrigX","coords","useRef","x","y","z","moonCoords","angle","moonAngle","mesh","dummyMesh","moonMesh","earthMesh","moonMeshReal","useState","useFrame","current","radians","newX","cos","newZ","sin","moonRadians","newMoonX","newMoonZ","position","visible","material","setFromMatrixPosition","matrixWorld","rotateY","texture","useLoader","TextureLoader","moonTexture","useSpring","scale","name","moonScale","rotation","layers","useMemo","onPointerOver","event","onPointerOut","ev","ActiveElementContext","createContext","ActiveElementContextProvider","children","store","Provider","value","Sun","toScreenPosition","tooltipRef","isActive","isMobile","arr","map","val","getScale","_spotlightIntensity","spotlightProps","penumbra","distance","intensity","hover","Stars","pointsRef","vertices","_vertices","i","star","THREE","random","velocity","acceleration","push","ref","forEach","p","setFromPoints","attach","color","size","Scene","canvasRef","useThree","camera","viewport","ambientLightRef","useEffect","useCallback","obj","_obj","cloneDeep","vector","widthHalf","width","heightHalf","height","updateMatrixWorld","project","_toScreenPosition","fallback","GlobalContextProviders","facts","Info","useS","config","duration","opacity","infoBodyHeight","currentFact","setCurrentFact","1","2","3","progressBars","setProgressBars","transform","pause","reset","onRest","setTimeout","loop","from","to","timbarInnerProps","animateInnerTimebar","barNum","div","className","style","maxHeight","maxWidth","top","right","padding","borderBottomLeftRadius","h2","background","margin","overflow","fontSize","display","justifyContent","marginTop","marginBottom","TrackScreenSize","useLayoutEffect","getAndSetBodyWidth","bodyWidth","document","body","getBoundingClientRect","window","addEventListener","removeEventListener","SpinningMesh","castShadow","args","MeshWobbleMaterial","factor","speed","defaultProps","App","setIsPaused","handleKeyDown","code","prevVal","colorManagement","shadowMap","fov","onClick","minHeight","fontWight","fontFamily","paddingLeft","marginLeft","href","bottom","left","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mSAYeA,EAREC,aAAO,SAACC,EAAKC,GAAN,MAAe,CACrCC,mBAAeC,EACfC,iBAAkB,SAACC,GAAD,OAAsBL,GAAI,SAACM,GAAD,MAAY,CAAEJ,cAAeG,OACzEE,iBAAaJ,EACbK,eAAgB,SAACC,GAAD,OAAST,GAAI,SAACM,GAAD,MAAY,CAAEC,YAAaE,OACxDC,YAAa,wBAAS,QAAH,EAAAT,WAAA,eAAOM,cAAe,S,OCEpC,SAASI,EAAmBC,GAEjC,OAAOA,GADEC,KAAKC,GACS,KAGzB,IAyGeC,EAzGD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC4BlB,IAAlDM,EADsB,EACtBA,iBAAkBF,EADI,EACJA,cAAeQ,EADX,EACWA,YACnCO,EAAQP,KAAiB,IAAM,GAC/BQ,EAAYR,IAAgB,IAAM,EAClCS,EAASC,iBAAO,CAAEC,EAAGJ,EAAOK,EAAG,EAAGC,EAAG,IACrCC,EAAaJ,iBAAO,CAAEC,EAAGH,EAAWI,EAAG,EAAGC,EAAG,IAC7CE,EAAQL,iBAAO,GACfM,EAAYN,iBAAO,GACnBO,EAAOP,mBACPQ,EAAYR,mBACZS,EAAWT,mBACXU,EAAYV,mBACZW,EAAeX,mBAZS,EAcJY,oBAAS,GAdL,6BAgB9BC,aAAS,WACP,IAAIjB,EAAJ,CACAS,EAAMS,SAAW,IACjBR,EAAUQ,SAAW,KACrB,IAAMC,EAAUxB,EAAmBc,EAAMS,SACnCE,EAAOnB,EAAQJ,KAAKwB,IAAIF,GACxBG,EAAOrB,EAAQJ,KAAK0B,IAAIJ,GAExBK,EAAc7B,EAAmBe,EAAUQ,SAC3CO,EAAWvB,EAAYL,KAAKwB,IAAIG,GAChCE,EAAWxB,EAAYL,KAAK0B,IAAIC,GACjCb,EAAKO,SAAYf,EAAOe,UAC7Bf,EAAOe,QAAU,CAAEb,EAAGe,EAAMb,EAAGe,EAAMhB,EAAG,GACxCE,EAAWU,QAAU,CAAEb,EAAGoB,EAAUnB,EAAG,EAAGC,EAAGmB,GAC7Cf,EAAKO,QAAQS,SAAStB,EAAIF,EAAOe,QAAQb,EACzCM,EAAKO,QAAQS,SAASpB,EAAIJ,EAAOe,QAAQX,EAEzCQ,EAAaG,QAAQS,SAAStB,EAAIG,EAAWU,QAAQb,EACrDU,EAAaG,QAAQS,SAASpB,EAAIC,EAAWU,QAAQX,EACrDK,EAAUM,QAAQU,SAAU,EAC5BjB,EAAKO,QAAQU,SAAU,EACvBf,EAASK,QAAQW,SAASD,SAAU,EACpCd,EAAUI,QAAQS,SAASG,sBAAsBnB,EAAKO,QAAQa,aAC9DjB,EAAUI,QAAQc,QAAQrC,EAAmB,MAC7CkB,EAASK,QAAQS,SAASG,sBAAsBlB,EAAUM,QAAQa,kBAGpE,IAAME,EAAUC,YAAUC,IAAe,oBACnCC,EAAcF,YAAUC,IAAe,mBA5Cf,EAqDDE,oBAAU,CACrCC,MAA+B,WAAX,OAAbpD,QAAa,IAAbA,OAAA,EAAAA,EAAeqD,MAAmB,CAAC,IAAK,IAAK,KAAO,CAAC,GAAI,GAAI,IACpEC,UAAmC,UAAX,OAAbtD,QAAa,IAAbA,OAAA,EAAAA,EAAeqD,MAAkB,CAAC,EAAG,EAAG,GAAK,CAAC,IAAK,IAAK,OAF7DD,EArDsB,EAqDtBA,MAAOE,EArDe,EAqDfA,UAKf,OACE,qCACE,gCACE,cAAC,EAAD,CAAc7B,KAAMA,EAApB,SACE,cAAC,EAAD,CACEsB,QAASA,EACTtB,KAAMC,EACNe,SAAU,CAAC,EAAG,EAAG,SAOvB,cAAC,EAAD,CACEc,SAAU,CAAC9C,EAAmB,IAAK,EAAG,GACtCgB,KAAMG,EACNd,SAAUA,EACV0C,OAAQ,EACRJ,MAAOK,mBAAQ,kBAAML,IAAO,QAACpD,QAAD,IAACA,OAAD,EAACA,EAAeqD,OAC5CN,QAASA,EACTW,cAAe,SAACC,GAAD,OAAWzD,EAAiB,CAAEmD,KAAM,WACnDO,aAAc,SAACD,GAAD,MAAoC,WAAX,OAAb3D,QAAa,IAAbA,OAAA,EAAAA,EAAeqD,MAAoBnD,EAAiB,WAAQD,KAGxF,cAAC,EAAD,CACEsD,SAAU,CAAC9C,GAAoB,GAAI,EAAG,GACtC+C,OAAQ,EACR1C,SAAUA,EACVW,KAAME,EAJR,SAOE,cAAC,EAAD,CACEF,KAAMI,EACNkB,QAASG,EACTE,MAAOK,mBAAQ,kBAAMH,IAAW,QAACtD,QAAD,IAACA,OAAD,EAACA,EAAeqD,OAChDK,cAAe,SAACG,GAAD,OAAQ3D,EAAiB,CAAEmD,KAAM,UAChDO,aAAc,SAACC,GAAD,MAAiC,UAAX,OAAb7D,QAAa,IAAbA,OAAA,EAAAA,EAAeqD,MAAmBnD,EAAiB,WAAQD,W,OC5GtF6D,EAAuBC,wBAAc,IAkB5BC,EAfsB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACTnC,qBADS,mBAE7CoC,EAAQ,CACZlE,cAHiD,KAIjDE,iBAJiD,MAOnD,OACE,cAAC4D,EAAqBK,SAAtB,CAA+BC,MAAOF,EAAtC,SACGD,KC8EQI,EAjFH,SAAC,GAA8C,IAA7CvD,EAA4C,EAA5CA,SAA4C,KAAlCwD,iBAAkC,EAAhBC,WACiB3E,KAAjDI,EADgD,EAChDA,cAAeE,EADiC,EACjCA,iBAAkBM,EADe,EACfA,YAInCiB,GAFSP,iBAAO,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IACzBH,iBAAO,GACRA,oBACPsD,EAAmC,SAAX,OAAbxE,QAAa,IAAbA,OAAA,EAAAA,EAAeqD,MAC1BoB,EAAWjE,IAPuC,EAiBjB2C,oBAAU,CAC/CC,MATe,WACf,IAEMsB,EAAMF,EAFK,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GAExB,OAAIC,EACGC,EAAIC,KAAI,SAAAC,GAAG,MAAU,GAANA,KADDF,EAKdG,GACPC,oBAAsBN,EAAgB,GAAL,KAF3BpB,EAjBgD,EAiBhDA,MAjBgD,EAiBzC0B,oBAMf/C,aAAS,WACJjB,GACHW,EAAKO,QAAQc,QAAQrC,EAAmB,QAG1C,IAAMsC,EAAUC,YAAUC,IAAe,kBAGnC8B,EAAiB,CACrBxD,MAAOZ,KAAKC,GAAK,IACjBoE,SAAU,GAEVC,SAAU,IACVC,UAPyB,IAe3B,OACE,qCACA,2BACIA,UAlBqB,GAmBrBzC,SAAU,CAAC,EAAG,EAAGgC,EAAW,EAAI,MAElC,mDACElD,MAAOZ,KAAKC,GAAK,KACbmE,GAFN,IAGEtC,SAAU,EAAE,IAAK,IAAK,OAExB,mDACElB,MAAOZ,KAAKC,GAAK,KACbmE,GAFN,IAGEtC,SAAU,CAAC,IAAK,IAAK,OAEtB,mDACClB,MAAOZ,KAAKC,GAAK,KACbmE,GAFL,IAGCtC,SAAU,CAAC,KAAM,IAAK,OAExB,mDACElB,MAAOZ,KAAKC,GAAK,KACbmE,GAFN,IAGEtC,SAAU,EAAE,KAAM,IAAK,OAE3B,cAAC,EAAD,CACEe,OAAQ,EACRE,cAAe,SAACC,GAAD,OAAWzD,EAAiB,CAAEmD,KAAM,SACnDO,aAAc,SAACD,GAAD,OAAWa,EAAWtE,EAAiB,WAAQD,GAC7Da,SAAUA,EACVsC,MAAOK,mBAAQ,kBAAML,IAAO,CAACoB,IAAYW,MAAOX,EAAUzB,QAASA,EAAStB,KAAMA,Q,QCjCzE2D,EAhDD,SAAC,GAAgB,IAAftE,EAAc,EAAdA,SAEVuE,EAAYnE,mBACVoE,EAAW7B,mBAAQ,WAEvB,IADA,IAAM8B,EAAY,GACVC,EAAE,EAAEA,EAAE,IAAKA,IAAK,CACtB,IAAMC,EAAO,IAAIC,UACC,IAAhB/E,KAAKgF,SAAiB,IACN,IAAhBhF,KAAKgF,SAAiB,IACN,IAAhBhF,KAAKgF,SAAiB,KAExBF,EAAKG,SAAW,EAChBH,EAAKI,aAAe,KACpBN,EAAUO,KAAKL,GAEjB,OAAOF,IAEN,IAEGxC,EAAUC,YAAUC,IAAe,YACnC8C,EAAM7E,mBAcZ,OAZAa,aAAS,WACJjB,IACHwE,EAASU,SAAQ,SAAAC,GACfA,EAAE5E,GAAK4E,EAAEJ,aAELI,EAAE5E,GAAK,KACT4E,EAAE5E,GAAK,GACP4E,EAAEL,SAAW,MAGjBG,EAAI/D,QAAQkE,cAAcZ,OAG1B,yBACES,IAAKV,EADP,UAGE,gCAAgBc,OAAO,WAAYJ,IAAKA,IACxC,gCACEK,MAAO,SACPC,KAAM,GACN1B,IAAK5B,QCyDEuD,EApFD,SAAC,GAAuC,IAAtCxF,EAAqC,EAArCA,SAAqByD,GAAgB,EAA3BgC,UAA2B,EAAhBhC,YAAgB,EAChBiC,cAA3BC,EAD2C,EAC3CA,OAAkBJ,GADyB,EACnCK,SADmC,EACzBL,MACpBM,EAAkBzF,mBACHA,mBAgCrB0F,qBAAU,cAcP,IAEsBC,uBAAY,SAACC,GAAD,OA9CrC,SAA2BC,GAEzB,IAAMD,EAAME,oBAAUD,GAChBE,EAAS,IAAIvB,UAMbwB,EAAY,GAAIb,EAAKc,MACrBC,EAAa,GAAIf,EAAKgB,OAa1B,OAXAP,EAAIQ,oBAEJL,EAAOrE,sBAAsBkE,EAAIjE,aACjCoE,EAAOM,QAAQd,GAEfQ,EAAO9F,EAAM8F,EAAO9F,EAAI+F,EAAcA,EACtCD,EAAO7F,GAAQ6F,EAAO7F,EAAIgG,EAAeA,EAKlC,CACHjG,EAAG8F,EAAO9F,EACVC,EAAG6F,EAAO7F,GAqB4BoG,CAAkBV,KAAM,IAGtE,OACE,qCACE,8BAAcf,IAAKY,EAAkBzB,UAAW,MAEhD,4BAEEzC,SAAU,CAAC,EAAG,EAAG,KAEnB,gCACE,eAAC,WAAD,CAAUgF,SAAU,KAApB,UACA,cAAC,EAAD,CAAO3G,SAAUA,IACf,cAAC,EAAD,CAEAyD,WAAYA,EAEZzD,SAAUA,IAGV,cAAC,EAAD,CACEyD,WAAYA,EAEZzD,SAAUA,aCpFP4G,EARgB,SAAC,GAAkB,IAAhBzD,EAAe,EAAfA,SAChC,OACE,cAAC,EAAD,UACGA,K,QCDD0D,EAAQ,CACZ9G,MAAO,CACL,+KACA,uHACA,uKAEFwD,IAAK,CACH,6DACA,wDACA,4HAEF,KAAQ,CACN,kJACA,qHAFM,kLAyLKuD,EA/KF,SAAC,GAGP,IAFLP,EAEI,EAFJA,OAGQrH,GADJ,EADJc,SAE0BlB,IAAlBI,eADJ,EAGgD8B,oBAAS,GAHzD,gCAIwC+F,oBAAK,CAC/CC,OAAQ,CAAEC,SAAU,KACpBC,QAAShI,EAAgB,EAAI,EAC7BqH,OAAQrH,EAAgB,OAAS,SAH3BgI,EAJJ,EAIIA,QAAiBC,EAJrB,EAIaZ,OAJb,EAUkCvF,mBAAS,GAV3C,mBAUGoG,EAVH,KAUgBC,EAVhB,OAgBoCrG,mBALhB,CACtBsG,EAAG,EACHC,EAAG,EACHC,EAAG,IAdD,mBAgBGC,EAhBH,KAgBiBC,EAhBjB,KAkBGC,EAAaZ,oBAAK,CACvBa,OAAQ1I,EACR2I,OAAQ3I,EAIR4I,OAAQ,WACa,IAAhBV,GACDM,EAAgB,2BAAID,GAAL,kBAAoBL,EAAc,KAGnDW,YAAW,WACTV,EAAeD,EAAc,EAAI,EAAI,EAAIA,EAAc,KACtD,IAGLY,MAAM,EACNC,KAAM,CAAEN,UAAW,aACnBO,GAAI,CAAEP,UAAW,aACjBX,OAAQ,CACNC,SAAU,OApBPU,UAwBP7B,qBAAU,WACJ5G,GACFmI,EAAe,KAWhB,CAACnI,IAoBJ,IAAMiJ,EAAmB,CACvBR,aAGIS,EAAsB,SAACC,GAO3B,OAAGjB,EAAciB,EAER,CAAEV,UAAW,aAGnBP,EAAciB,EACR,CAAEV,UAAW,aAGnBU,IAAWjB,EACL,CAAEO,UAAU,UAAD,OAAYF,EAAaY,GAAzB,MAGbF,GAUT,OACE,eAAC,WAASG,IAAV,CACEC,UAAU,QAEVC,MAAO,CACLjC,OAAQ,MACRkC,UAAW,IACXC,SAAU,IACVrC,MAAO,MACP1E,SAAU,WACVgH,IAAI,GAAD,OAAKpC,EAAL,MACHqC,MAAO,EACPC,QAAS,EACTvD,MAAO,QACPwD,uBAAwB,EACxB5B,WAdJ,UAiBE,cAAC,WAAS6B,GAAV,CACEP,MAAO,CACLQ,WAAY,UACZC,OAAQ,EACRJ,QAAS,GACTtC,OAAQ,IALZ,gBAQErH,QARF,IAQEA,OARF,EAQEA,EAAgBqD,OAClB,eAAC,WAAS+F,IAAV,CACEC,UAAU,YACVC,MAAO,CACLK,QAAS,WAETtC,OAAQY,EAER6B,WAAY,4BACZE,SAAU,UARd,UAUE,2CACA,mBAAGV,MAAO,CAAEK,QAAS,SAAUI,OAAQ,SAAUE,SAAU,IAA3D,SA3CClK,cAAI4H,EAAD,iBAAW3H,QAAX,IAAWA,OAAX,EAAWA,EAAeqD,KAA1B,YAAkC6E,EAAc,EAAhD,KAAsD,MA+C1D,qBAAKoB,MAAO,CAAEtB,QAAShI,EAAgB,EAAI,EAAGkK,QAAS,OAAQ/C,MAAO,OAAQgD,eAAgB,gBAAiBC,UAAW,OAAQC,aAAc,IAAhJ,SACMrK,EACF,qCACF,qBAAKqJ,UAAU,UAAf,SAEE,cAAC,WAASD,IAAV,CAAeE,MAAOJ,EAAoB,GAAIG,UAAU,oBAE1D,qBAAKA,UAAU,UAAf,SACA,cAAC,WAASD,IAAV,CAAeE,MAAOJ,EAAoB,GAAIG,UAAU,oBAExD,qBAAKA,UAAU,UAAf,SACA,cAAC,WAASD,IAAV,CAAeE,MAAOJ,EAAoB,GAAIG,UAAU,uBAElD,cC7KDiB,EAhBS,WAAO,IAErBhK,EAAmBV,IAAnBU,eAWR,OAVAiK,2BAAgB,WACd,IAAMC,EAAqB,WAAO,IAAD,IACvBC,EAAS,UAAGC,SAASC,YAAZ,iBAAG,EAAeC,+BAAlB,aAAG,EAAwCzD,MAC1D7G,EAAemK,IAInB,OAFAD,IACAK,OAAOC,iBAAiB,SAAUN,GAC3B,kBAAMK,OAAOE,oBAAoB,SAAUP,MACjD,IAEI,MCAIQ,EAAe,SAAC,GAAkG,EAAhGlK,SAAiG,IAAvFyC,EAAsF,EAAtFA,SAAUd,EAA4E,EAA5EA,SAAUhB,EAAkE,EAAlEA,KAAM2B,EAA4D,EAA5DA,MAAOL,EAAqD,EAArDA,QAASkB,EAA4C,EAA5CA,SAAUP,EAAkC,EAAlCA,cAAeE,EAAmB,EAAnBA,aAE1G,OACE,eAAC,IAAEnC,KAAH,CACE2B,MAAOA,EACPG,SAAUA,EACVG,cAAeA,EACfE,aAAcA,EACdnB,SAAUA,EACVsD,IAAKtE,EACLwJ,YAAU,EAPZ,UAQE,gCAAgB9E,OAAO,WAAW+E,KAAM,CAAC,EAAG,GAAI,MAChD,cAACC,EAAA,EAAD,CACEhF,OAAO,WACPiF,OAAmB,EACnBC,MAAO,EACP1G,IAAK5B,IAENkB,MAKP+G,EAAaM,aAAe,CAC1B1H,aAAc,aACdF,cAAe,cAIjB,IAkFe6H,EAlFH,WAAO,IAAD,EACuB3L,IAAhBY,GADP,EACRR,cADQ,EACOQ,aACjB6G,EAAS,KAFC,EAGgBvF,oBAAS,GAHzB,mBAGThB,EAHS,KAGC0K,EAHD,KAIVjF,EAAYrF,mBACZqD,EAAarD,mBAiBnB,OAfA0F,qBAAU,WAER,IAAM6E,EAAgB,SAAC5H,GACL,UAAZA,EAAG6H,MAEPF,GAAY,SAAAG,GAAO,OAAKA,MAI1B,OAFAd,OAAOC,iBAAiB,UAAWW,GAE5B,WACLZ,OAAOE,oBAAoB,UAAWU,MAGvC,IAGD,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CACEG,iBAAe,EACfC,WAAS,EACTpF,OAAQ,CAAEhE,SAAU,CAAC,EAAG,EAAG,IAAKqJ,IAAK,IACrCC,QAAS,kBAAMP,GAAY,SAAAG,GAAO,OAAKA,MAJzC,SAOE,cAAC,EAAD,CACE7K,SAAUA,EACVyF,UAAWA,EACXhC,WAAYA,MAKhB,qBAAK+E,MAAO,CACV7G,SAAU,WAAYuJ,UAAU,GAAD,OAAK3E,EAAL,MAAiBF,MAAO,QACvD2C,WAAY,QACZG,SAAUzJ,IAAgB,GAAK,GAC/ByL,UAAW,IACXC,WAAY,YACZzC,IAAK,EACLS,QAAS,QAPX,SASE,qBAAKZ,MAAO,CAAEK,QAAS,GAAIwC,YAAa3L,IAAgB,GAAK,GAAI4J,UAAW,OAAQC,aAAc,OAAQH,QAAS,OAAQ/C,MAAO,QAAlI,SAEE,sBAAKkC,UAAU,eAAf,uBACY,uBAAMC,MAAO,CAAEW,SAAU,GAAImC,YAAa,GAA1C,mBACA,mBAAG/C,UAAU,eAAegD,KAAK,0CAAjC,kCAKhB,qBAAK/C,MAAO,CACV0C,UAAU,GAAD,OAAK3E,EAAL,MACTF,MAAO,QACP2C,WAAY,QACZwC,OAAQ,EAAGC,KAAM,EAAG9J,SAAU,WAC9ByH,QAAS,OACTD,SAAU,GACVgC,UAAW,KAPb,SAUE,qBAAK3C,MAAO,CAAES,OAAQ,QAAtB,SACE,mBAAGgC,QAAS,kBAAMP,GAAY,SAAAG,GAAO,OAAKA,MAAUtC,UAAS,cAASvI,EAAW,UAAY,kBAGjG,qBAAKiF,IAAKxB,EAAYiI,GAAG,UAAUlD,MAAO,CAAE7G,SAAU,WAAY2D,MAAO,SAAzE,iBAEC5F,IAAgB,KAAQ,cAAC,EAAD,CACvBM,SAAUA,EACVuG,OAAQA,QC/GDoF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAAS2C,eAAe,SAM1BZ,M","file":"static/js/main.030d24c4.chunk.js","sourcesContent":["\nimport React from 'react';\nimport create from 'zustand';\n\nconst useStore = create((set, get) => ({\n  activeElement: undefined,\n  setActiveElement: (newActiveElement) => set((state) => ({ activeElement: newActiveElement })),\n  screenWidth: undefined,\n  setScreenWidth: (int) => set((state) => ({ screenWidth: int})),\n  getIsMobile: () => get()?.screenWidth <= 576,\n}))\n\nexport default useStore;","\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { cloneDeep } from 'lodash';\nimport * as THREE from \"three\";\nimport { SpinningMesh } from \"./App\";\n\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\nimport { useFrame, useLoader, useThree } from \"react-three-fiber\";\nimport { useSpring, a } from \"@react-spring/three\";\nimport useStore from './context/store';\n\nexport function degrees_to_radians(degrees) {\n  var pi = Math.PI;\n  return degrees * (pi / 180);\n}\n\nconst Earth = ({ isPaused }) => {\n  const { setActiveElement, activeElement, getIsMobile, } = useStore();\n  const origX = getIsMobile() ? -10 : -14;\n  const moonOrigX = getIsMobile() ? 1.5 : 2;\n  const coords = useRef({ x: origX, y: 0, z: 0 });\n  const moonCoords = useRef({ x: moonOrigX, y: 0, z: 0 })\n  const angle = useRef(0);\n  const moonAngle = useRef(0);\n  const mesh = useRef();\n  const dummyMesh = useRef();\n  const moonMesh = useRef();\n  const earthMesh = useRef();\n  const moonMeshReal = useRef();\n\n  const [hover, setHover] = useState(false)\n\n  useFrame(() => {\n    if (isPaused) return;\n    angle.current -= .25;\n    moonAngle.current -= 3.38\n    const radians = degrees_to_radians(angle.current);\n    const newX = origX * Math.cos(radians)\n    const newZ = origX * Math.sin(radians)\n\n    const moonRadians = degrees_to_radians(moonAngle.current);\n    const newMoonX = moonOrigX * Math.cos(moonRadians)\n    const newMoonZ = moonOrigX * Math.sin(moonRadians)\n    if (!mesh.current || !coords.current) return;\n    coords.current = { x: newX, z: newZ, y: 0 }\n    moonCoords.current = { x: newMoonX, y: 0, z: newMoonZ }\n    mesh.current.position.x = coords.current.x\n    mesh.current.position.z = coords.current.z\n\n    moonMeshReal.current.position.x = moonCoords.current.x\n    moonMeshReal.current.position.z = moonCoords.current.z\n    dummyMesh.current.visible = false;\n    mesh.current.visible = false;\n    moonMesh.current.material.visible = false;\n    earthMesh.current.position.setFromMatrixPosition(mesh.current.matrixWorld)\n    earthMesh.current.rotateY(degrees_to_radians(2.5))\n    moonMesh.current.position.setFromMatrixPosition(dummyMesh.current.matrixWorld)\n  })\n\n  const texture = useLoader(TextureLoader, 'earthTexture.jpg')\n  const moonTexture = useLoader(TextureLoader, 'moonTexture.jpg')\n\n  const scaleActiveElement = (sizeArr, element, activeElementName) => {\n    if(element !== activeElementName) return sizeArr\n\n    return sizeArr.map(val => val* 3)\n     \n  }\n\n  const { scale, moonScale } = useSpring({\n    scale: activeElement?.name === 'Earth' ? [1.5, 1.5, 1.5] : [.5, .5, .5],\n    moonScale: activeElement?.name === 'Moon' ? [1, 1, 1] : [.25, .25, .25],\n  });\n\n  return (\n    <>\n      <group>\n        <SpinningMesh mesh={mesh}>\n          <SpinningMesh\n            texture={texture}\n            mesh={dummyMesh}\n            position={[0, 0, 0]}\n          />\n\n        </SpinningMesh>\n\n\n      </group>\n      <SpinningMesh\n        rotation={[degrees_to_radians(24), 0, 0]}\n        mesh={earthMesh}\n        isPaused={isPaused}\n        layers={3}\n        scale={useMemo(() => scale, [activeElement?.name])}\n        texture={texture}\n        onPointerOver={(event) => setActiveElement({ name: 'Earth' })}\n        onPointerOut={(event) => (activeElement?.name === 'Earth') ? setActiveElement(null) : undefined}\n\n      />\n      <SpinningMesh\n        rotation={[degrees_to_radians(-5), 0, 0]}\n        layers={1}\n        isPaused={isPaused}\n        mesh={moonMesh}\n      >\n\n        <SpinningMesh\n          mesh={moonMeshReal}\n          texture={moonTexture}\n          scale={useMemo(() => moonScale, [activeElement?.name])}\n          onPointerOver={(ev) => setActiveElement({ name: 'Moon' })}\n          onPointerOut={(ev) => (activeElement?.name === 'Moon') ? setActiveElement(null) : undefined}\n        />\n\n      </SpinningMesh>\n\n    </>\n  )\n\n};\n\nexport default Earth;","\nimport React, { useState, createContext, useContext } from 'react';\n\nconst ActiveElementContext = createContext({});\nexport const useActiveElementContext = () => useContext(ActiveElementContext);\n\nconst ActiveElementContextProvider = ({children}) => {\n  const [activeElement, setActiveElement] = useState();\n  const store = {\n    activeElement,\n    setActiveElement\n  }\n\n  return (\n    <ActiveElementContext.Provider value={store}>\n      {children}\n    </ActiveElementContext.Provider>\n  );\n}\n\n\nexport default ActiveElementContextProvider;","\n\nimport React, { useEffect, useState, useRef, useMemo, Suspense } from 'react';\nimport { SpinningMesh } from \"./App\";\n\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\nimport { useLoader, useFrame } from \"react-three-fiber\";\nimport { useSpring, a } from \"@react-spring/three\";\nimport { degrees_to_radians } from './Earth';\nimport { useActiveElementContext } from './context/ActiveElementContext';\nimport useStore from './context/store';\n\nconst Sun = ({isPaused, toScreenPosition, tooltipRef}) => {\n  const { activeElement, setActiveElement, getIsMobile } = useStore();\n  const origX = 3\n  const coords = useRef({ x: 0, y: 0, z: 0 });\n  const angle = useRef(0);\n  const mesh = useRef()\n  const isActive = activeElement?.name === 'Sun';\n  const isMobile = getIsMobile();\n\n  const getScale = () => {\n    const largeArr = [4, 4, 4];\n    const smallArr = [3, 3, 3];\n    const arr = isActive ? largeArr : smallArr;\n    if(!isMobile) return arr\n    return arr.map(val => val * .9)\n  }\n\n  const { scale, _spotlightIntensity } = useSpring({ \n    scale: getScale(),\n    _spotlightIntensity: !isActive ? .5 : .4,\n  }\n  )\n\n  useFrame(() => {\n    if(isPaused) return;\n    mesh.current.rotateY(degrees_to_radians(.3))\n  })\n\n  const texture = useLoader(TextureLoader, 'sunTexture.jpg')\n  const spotlightIntensity = .4\n\n  const spotlightProps = {\n    angle: Math.PI / 150,\n    penumbra: 0.5,\n    // distance: isMobile ? 150 : 300,\n    distance: 300,\n    intensity: spotlightIntensity,\n  }\n\n  // const getPosition = (position) => {\n  //   if(!isMobile || true) return position\n\n  //   return position.map(val => val * .75)\n  // }\n  return (\n    <>\n    <spotLight\n        intensity={spotlightIntensity}\n        position={[0, 0, isMobile ? 7 : 10]}\n      />\n      <spotLight\n        angle={Math.PI / 150}\n        {...spotlightProps}\n        position={[-100, 100, 50]}\n      />\n      <spotLight\n        angle={Math.PI / 150}\n        {...spotlightProps}\n        position={[100, 100, 50]}\n      />\n       <spotLight\n        angle={Math.PI / 150}\n        {...spotlightProps}\n        position={[100, -100, 50]}\n      />\n      <spotLight\n        angle={Math.PI / 150}\n        {...spotlightProps}\n        position={[-100, -100, 50]}\n      />\n    <SpinningMesh\n      layers={2}\n      onPointerOver={(event) => setActiveElement({ name: 'Sun' })}\n      onPointerOut={(event) => isActive ? setActiveElement(null) : undefined}\n      isPaused={isPaused}\n      scale={useMemo(() => scale, [isActive])} hover={isActive} texture={texture} mesh={mesh} />\n      </>\n  )\n\n};\n\nexport default Sun;","\nimport React, {useMemo, useRef} from 'react';\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\nimport { useFrame, useLoader } from \"react-three-fiber\";\n\nconst Stars = ({isPaused}) => {\n\nconst pointsRef = useRef();\n  const vertices = useMemo(() => {\n    const _vertices = []\n    for(let i=0;i<2000;i++) {\n      const star = new THREE.Vector3(\n        Math.random() * 600 - 300,\n        Math.random() * 600 - 300,\n        Math.random() * 600 - 300\n      );\n      star.velocity = 0;\n      star.acceleration = 0.025;\n      _vertices.push(star)\n    }\n    return _vertices;\n\n  }, [])\n  \n  const texture = useLoader(TextureLoader, 'star.png')\n  const ref = useRef();\n\n  useFrame(() => {\n    if(isPaused) return;\n    vertices.forEach(p => {\n      p.z += p.acceleration\n      \n      if (p.z > -40) {\n        p.z = -90;\n        p.velocity = 0;\n      }\n    });\n    ref.current.setFromPoints(vertices)\n  })\n  return (\n    <points\n      ref={pointsRef}\n      >\n      <bufferGeometry attach=\"geometry\"  ref={ref} />\n      <pointsMaterial \n        color={0xaaaaaa}\n        size={0.3}\n        map={texture}\n      />\n    </points>\n  )\n}\n\nexport default Stars;\n","\nimport React, { useRef, useCallback, useState, useEffect, useLayoutEffect, Suspense } from \"react\";\n//R3F\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport * as THREE from \"three\";\n\n// Deai - R3F\n// import { softShadows, MeshWobbleMaterial, OrbitControls } from \"drei\";\n//Components\n// import Header from \"./components/header\";\n// Styles\nimport \"./App.css\";\n// React Spring\nimport { useSpring, a } from \"@react-spring/three\";\nimport { MeshWobbleMaterial, OrbitControls } from '@react-three/drei'\nimport Earth from \"./Earth\";\nimport Sun from \"./Sun\";\nimport Stars from \"./Stars\";\n\nimport {cloneDeep} from 'lodash'\n\nconst Scene = ({isPaused, canvasRef, tooltipRef}) => {\n  const { camera, viewport, size } = useThree()\n  const ambientLightRef = useRef()\n  const spotLightRef = useRef()\n\n  function _toScreenPosition(_obj)\n  {\n    const obj = cloneDeep(_obj)\n      var vector = new THREE.Vector3();\n\n      // console.log('viewport', viewport())\n      // console.log('size', size)\n      // return null\n  \n      var widthHalf = 0.5*size.width;\n      var heightHalf = 0.5*size.height;\n  \n      obj.updateMatrixWorld();\n      // console.log('obj', obj.matrixWorld)\n      vector.setFromMatrixPosition(obj.matrixWorld);\n      vector.project(camera);\n  \n      vector.x = ( vector.x * widthHalf ) + widthHalf;\n      vector.y = - ( vector.y * heightHalf ) + heightHalf;\n\n      // console.log('X', vector.x)\n      // console.log('Y', vector.y)\n  \n      return { \n          x: vector.x,\n          y: vector.y\n      };\n  \n  };\n\n  useEffect(() => {\n    // camera.layers.enable(1)\n    // camera.layers.enable(2)\n    // camera.layers.enable(3)\n    // console.log('camera layers', camera.layers)\n    // ambientLightRef.current.layers.enable(1)\n    // ambientLightRef.current.layers.enable(2)\n    // ambientLightRef.current.layers.disable(1)\n    // spotLightRef.current.layers.disable(1)\n    // spotLightRef.current.layers.enable(1)\n    \n    // spotLightRef.current.layers.disableAll()\n    // spotLightRef.current.layers.enable(3)\n    // console.log('spotLightRef.current.layers.', spotLightRef.current.layers)\n  }, [])\n\n  const toScreenPosition = useCallback((obj) => _toScreenPosition(obj), [])\n\n  const spotlightIntensity = 0.15;\n  return (\n    <>\n      <ambientLight ref={ambientLightRef } intensity={0.05} />\n     \n      <pointLight\n\n        position={[0, 0, 0]}\n      />\n      <group >\n        <Suspense fallback={null} >\n        <Stars isPaused={isPaused}/>\n          <Earth\n\n          tooltipRef={tooltipRef}\n          // toScreenPosition={toScreenPosition}\n          isPaused={isPaused}\n\n          />\n          <Sun \n            tooltipRef={tooltipRef}\n            // toScreenPosition={toScreenPosition}\n            isPaused={isPaused}\n\n            />\n        </Suspense>\n      </group>\n    </>\n  );\n}\n\nexport default Scene;","\nimport React from 'react';\nimport ActiveElementContextProvider from './ActiveElementContext';\n\nconst GlobalContextProviders = ({ children }) => {\n  return (\n    <ActiveElementContextProvider>\n      {children}\n    </ActiveElementContextProvider>\n  )\n};\n\nexport default GlobalContextProviders;\n","\nimport React, { useRef, useEffect, useState, useLayoutEffect, Suspense } from \"react\";\nimport { useSpring as useS, animated } from \"@react-spring/web\";\nimport {get} from 'lodash';\nimport useStore from \"./context/store\";\n\nconst facts = {\n  Earth: [\n    'Earth is the only planet known to support life because it has two very important things that living creatures need to survive –– lots of oxygen and lots of water.',\n    'The Earth’s diameter measures a huge 12,800 kilometres, making it the fifth largest planet in the solar system.',\n    'Earth spinning on its axis is why we have daytime and nighttime. As the planet rotates, the side facing the sun receives daylight and the the other is in darkness.'\n  ],\n  Sun: [\n    'The Sun is a star found at the center of the Solar System.',\n    'Light from the Sun reaches Earth in around 8 minutes.',\n    'At around 1,392,000 kilometres (865,000 miles) wide, the Sun’s diameter is about 110 times wider than Earth’s.',\n  ],\n  'Moon': [\n    'The moon was created when a rock the size of Mars slammed into Earth, shortly after the solar system began forming about 4.5 billion years ago.',\n    'The Moon is drifting away from the Earth. The Moon is moving approximately 3.8 cm away from our planet every year.',\n    `The Sun and the Moon aren't the same size, even though they look it from earth. This is because the moon is 400x smaller than the sun, but 400x closer than the sun to earth.`\n    \n    // From Earth, both the Sun and the Moon look about same size. This is because the Moon is 400x smaller than the Sun, but also 400x closer to Earth.',\n\n  ]\n}\n\nconst Info = ({\n  height,\n  isPaused,\n}) => {\n  const { activeElement } = useStore();\n  // const activeElement = null;\n  const [shouldHideProgress, setShouldHideProgress] = useState(false);\n  const { opacity, height: infoBodyHeight } = useS({\n    config: { duration: 250 },\n    opacity: activeElement ? 1 : 0,\n    height: activeElement ? '100%' : '25%',\n  });\n\n  const [currentFact, setCurrentFact] = useState(1);\n  const initProgressBar = {\n    1: 0,\n    2: 0,\n    3: 0,\n  }\n  const [progressBars, setProgressBars] = useState(initProgressBar)\n  // console.log('progressBar', progressBars)\n  const {transform} = useS({\n    pause: !activeElement,\n    reset: !activeElement,\n    // cancel: isPaused && !activeElement,\n    // loop: true,\n\n    onRest: () => {\n      if(currentFact !== 3) {\n        setProgressBars({...progressBars, [currentFact]: 1 })\n      }\n      \n      setTimeout(() => {\n        setCurrentFact(currentFact + 1 > 3 ? 1 : currentFact + 1)\n      }, 0)\n    }\n    ,\n    loop: true,\n    from: { transform: 'scaleX(0)' },\n    to: { transform: 'scaleX(1)' },\n    config: {\n      duration: 3000,\n    }\n  })\n\n  useEffect(() => {\n    if(!activeElement) {\n      setCurrentFact(1)\n      // if (isPaused) {\n      //   return setShouldHideProgress(true)\n      // }\n      // return\n    } \n\n    // if(isPaused) return;\n\n    // return setShouldHideProgress(false)\n\n  }, [activeElement])\n\n  // console.log('should', shouldHideProgress)\n\n\n\n  // useLayoutEffect(() => {\n  //   // if(currentFact === 0) {\n  //   //   setProgressBars(initProgressBar)\n  //   // } else {\n  //   //   // setProgressBars({...progressBars, [currentFact]: 1 })\n  //   // }\n  // }, [currentFact])\n\n  // const { opacity: headerOpacity } = useS({\n  //   config: { duration: 250 },\n  //   opacity: activeElement ? 1 : 0,\n  //   delay: 50\n  // });\n\n  const timbarInnerProps = {\n    transform,\n  }\n\n  const animateInnerTimebar = (barNum) => {\n\n    // if(shouldHideProgress) {\n    //   return { transform: 'scaleX(0)' }\n    // }\n\n    // return progressBars[barNum]\n    if(currentFact > barNum) {\n      // console.log('barNum', barNum)currentFact\n      return { transform: 'scaleX(1)' }\n    };\n\n    if(currentFact < barNum) {\n      return { transform: 'scaleX(0)' }\n    };\n\n    if(barNum !== currentFact) {\n      return { transform: `scaleX(${progressBars[barNum]})` }\n    }\n\n    return timbarInnerProps;\n  }\n\nconst getFact = () => {\n  // if(!activeElement?.name) return '';\n  return get(facts, `${activeElement?.name}[${currentFact - 1}]`, '')\n\n\n}\n\n  return (\n    <animated.div\n      className=\"info2\"\n      // opacity={opacity}\n      style={{\n        height: '30%',\n        maxHeight: 260,\n        maxWidth: 360,\n        width: '40%',\n        position: 'absolute',\n        top: `${height}vh`,\n        right: 0,\n        padding: 0,\n        color: 'white',\n        borderBottomLeftRadius: 5,\n        opacity\n        // opacity: activeElement ? 1 : 0,\n      }}>\n      <animated.h2\n        style={{\n          background: '#111011',\n          margin: 0,\n          padding: 20,\n          height: 64,\n          // opacity: opacity,\n        }}\n      >{activeElement ?.name}</animated.h2>\n      <animated.div\n        className=\"info-body\"\n        style={{\n          padding: '5px 20px',\n          // height: '100%',\n          height: infoBodyHeight,\n          // height: activeElement ? '100%' : 0,\n          background: 'rgba(255, 255, 255, 0.08)',\n          overflow: 'hidden',\n        }}>\n        <p >Fun Facts:</p>\n        <p style={{ padding: '0 15px', margin: '10px 0', fontSize: 20 }}>\n          {/* Earth is 4.54 billion years old. */}\n          {getFact()}\n        </p>\n        <div style={{ opacity: activeElement ? 1 : 0, display: 'flex', width: '100%', justifyContent: 'space-between', marginTop: 'auto', marginBottom: 10 }}>\n          { !!activeElement ?\n            <>\n          <div className=\"timebar\">\n\n            <animated.div  style={animateInnerTimebar(1)} className=\"timebar-inner\" />\n          </div>\n          <div className=\"timebar\">\n          <animated.div  style={animateInnerTimebar(2)} className=\"timebar-inner\" />\n          </div>\n          <div className=\"timebar\">\n          <animated.div  style={animateInnerTimebar(3)} className=\"timebar-inner\" />\n          </div>\n          </> : null\n          }\n        </div>\n      </animated.div>\n    </animated.div>\n  )\n}\n\nexport default Info;\n","\nimport React, {useLayoutEffect} from 'react';\nimport useStore from './context/store';\n\n\nconst TrackScreenSize = () => {\n\n  const { setScreenWidth } = useStore();\n  useLayoutEffect(() => {\n    const getAndSetBodyWidth = () => {\n        const bodyWidth = document.body?.getBoundingClientRect()?.width;\n        setScreenWidth(bodyWidth);\n    }\n    getAndSetBodyWidth()\n    window.addEventListener('resize', getAndSetBodyWidth);\n    return () => window.removeEventListener('resize', getAndSetBodyWidth);\n  }, [])\n\n  return null;\n};\n\nexport default TrackScreenSize","import React, { useRef, useEffect, useState, useLayoutEffect, Suspense } from \"react\";\n\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport \"./App.css\";\n\nimport { useSpring, a } from \"@react-spring/three\";\nimport { useSpring as useS, animated } from \"@react-spring/web\";\nimport { MeshWobbleMaterial, OrbitControls } from '@react-three/drei'\nimport Earth from \"./Earth\";\nimport Sun from \"./Sun\";\nimport Scene from \"./Scene\";\nimport GlobalContextProviders from \"./context/GlobalContextProviders\";\nimport useStore from \"./context/store\";\nimport Info from \"./Info\";\nimport TrackScreenSize from './TrackScreenSize';\n\n\nexport const SpinningMesh = ({ isPaused, rotation, position, mesh, scale, texture, children, onPointerOver, onPointerOut }) => {\n\n  return (\n    <a.mesh\n      scale={scale}\n      rotation={rotation}\n      onPointerOver={onPointerOver}\n      onPointerOut={onPointerOut}\n      position={position}\n      ref={mesh}\n      castShadow>\n      <sphereGeometry attach='geometry' args={[1, 16, 16]} />\n      <MeshWobbleMaterial\n        attach=\"material\"\n        factor={isPaused ? 0 : 0} // Strength, 0 disables the effect (default=1)\n        speed={1} // Speed (default=1)\n        map={texture}\n      />\n      {children}\n    </a.mesh>\n  )\n};\n\nSpinningMesh.defaultProps = {\n  onPointerOut: () => { },\n  onPointerOver: () => { },\n}\n\n\nconst App = () => {\n  const { activeElement, getIsMobile } = useStore();\n  const height = 11.5;\n  const [isPaused, setIsPaused] = useState(false);\n  const canvasRef = useRef();\n  const tooltipRef = useRef();\n\n  useEffect(() => {\n\n    const handleKeyDown = (ev) => {\n      if (ev.code !== 'Space') return;\n\n      setIsPaused(prevVal => !prevVal)\n    }\n    window.addEventListener('keydown', handleKeyDown)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n\n  }, [])\n\n  return (\n    <GlobalContextProviders>\n      <TrackScreenSize />\n      <Canvas\n        colorManagement\n        shadowMap\n        camera={{ position: [0, 0, 20], fov: 90 }}\n        onClick={() => setIsPaused(prevVal => !prevVal)}\n      // onPointerMove={ev => console.log('ev', ev.target)}\n      >\n        <Scene\n          isPaused={isPaused}\n          canvasRef={canvasRef}\n          tooltipRef={tooltipRef}\n        />\n        {/* Allows us to move the canvas around for different prespectives */}\n        {/* <OrbitControls />/ */}\n      </Canvas>\n      <div style={{\n        position: 'absolute', minHeight: `${height}vh`, width: '100vw',\n        background: 'black',\n        fontSize: getIsMobile() ? 25 : 28,\n        fontWight: 400,\n        fontFamily: 'monospace',\n        top: 0,\n        display: 'flex',\n      }}>\n        <div style={{ padding: 20, paddingLeft: getIsMobile() ? 20 : 25, marginTop: 'auto', marginBottom: 'auto', display: 'flex', width: '100%' }}>\n\n          <div className=\"title-header\">\n            Orbitting <span style={{ fontSize: 16, marginLeft: -5 }}>\n              by&nbsp;<a className=\"my-name-link\" href='https://www.linkedin.com/in/benjwexler/'>Ben Wexler</a>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div style={{\n        minHeight: `${height}vh`,\n        width: '100vw',\n        background: 'black',\n        bottom: 0, left: 0, position: 'absolute',\n        display: 'flex',\n        fontSize: 28,\n        fontWight: 400,\n      }}>\n\n        <div style={{ margin: 'auto' }}>\n          <i onClick={() => setIsPaused(prevVal => !prevVal)} className={`fas ${isPaused ? 'fa-play' : 'fa-pause'}`} />\n        </div>\n      </div>\n      <div ref={tooltipRef} id=\"tooltip\" style={{ position: 'absolute', color: 'white' }}>Sun</div>\n\n      {getIsMobile() ? null : (<Info\n        isPaused={isPaused}\n        height={height}\n      />)}\n    </GlobalContextProviders>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}